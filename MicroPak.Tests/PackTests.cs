using System.Text;

namespace MicroPak.Tests;

public class PackTests
{
    private static InputFile CreateAsciiTxtFile(string path, string content) =>
        new(path, Encoding.ASCII.GetBytes(content));

    [Fact]
    public void TestEmpty()
    {
        // Act
        var actual = MicroPak.PackFiles([]);

        // Assert
        byte[] expected =
        [
            0x0A, 0x00, 0x00, 0x00, 0x2E, 0x2E, 0x2F, 0x2E, 0x2E, 0x2F, 0x2E, 0x2E, 0x2F, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE1,
            0x12, 0x6F, 0x5A, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x06, 0x13, 0x1F, 0x7B, 0x4D, 0x8D, 0x4F, 0x57, 0x28, 0x59, 0x7B, 0xBF,
            0xD3, 0x44, 0x98, 0x51, 0x07, 0xC9, 0x5E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00
        ];
        
        Assert.Equal(expected, actual);
    }

    [Fact]
    public void TestAsciiTxt()
    {
        // Arrange
        var file1 = CreateAsciiTxtFile("CoolGame/Content/Dir1/Dir2/FileA.txt", "Hello, world!\r\n");
        var file2 = CreateAsciiTxtFile("CoolGame/Content/Dir1/Dir2/FileB.txt", "Goodbye, world!\r\n");

        // Act
        var actual = MicroPak.PackFiles([file1, file2]);

        // Assert
        byte[] expected = // Reference output produced with `repak pack` (using default options)
        [
            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xF, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xF, 0x0, 0x0, 0x0, 0x0,
            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x60, 0xC, 0x5A, 0x90, 0x9D, 0xC4, 0xBC, 0x72, 0x1E, 0x5D, 0xC2, 0xD4,
            0xBC, 0xE6, 0xD8, 0xDE, 0x4A, 0x76, 0x53, 0xC2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x48, 0x65, 0x6C, 0x6C, 0x6F, 0x2C,
            0x20, 0x77, 0x6F, 0x72, 0x6C, 0x64, 0x21, 0xD, 0xA, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x11, 0x0, 0x0,
            0x0, 0x0, 0x0, 0x0, 0x0, 0x11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xD9, 0x7E, 0x80, 0x6,
            0x6A, 0x63, 0xBC, 0xB3, 0x20, 0x6E, 0xE6, 0xD1, 0x66, 0xB, 0x9E, 0x9E, 0x90, 0x30, 0x79, 0x35, 0x0, 0x0,
            0x0, 0x0, 0x0, 0x47, 0x6F, 0x6F, 0x64, 0x62, 0x79, 0x65, 0x2C, 0x20, 0x77, 0x6F, 0x72, 0x6C, 0x64, 0x21,
            0xD, 0xA, 0xA, 0x0, 0x0, 0x0, 0x2E, 0x2E, 0x2F, 0x2E, 0x2E, 0x2F, 0x2E, 0x2E, 0x2F, 0x0, 0x2, 0x0, 0x0, 0x0,
            0x25, 0x0, 0x0, 0x0, 0x43, 0x6F, 0x6F, 0x6C, 0x47, 0x61, 0x6D, 0x65, 0x2F, 0x43, 0x6F, 0x6E, 0x74, 0x65,
            0x6E, 0x74, 0x2F, 0x44, 0x69, 0x72, 0x31, 0x2F, 0x44, 0x69, 0x72, 0x32, 0x2F, 0x46, 0x69, 0x6C, 0x65, 0x41,
            0x2E, 0x74, 0x78, 0x74, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xF, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
            0xF, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x60, 0xC, 0x5A, 0x90, 0x9D, 0xC4, 0xBC, 0x72,
            0x1E, 0x5D, 0xC2, 0xD4, 0xBC, 0xE6, 0xD8, 0xDE, 0x4A, 0x76, 0x53, 0xC2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x25, 0x0,
            0x0, 0x0, 0x43, 0x6F, 0x6F, 0x6C, 0x47, 0x61, 0x6D, 0x65, 0x2F, 0x43, 0x6F, 0x6E, 0x74, 0x65, 0x6E, 0x74,
            0x2F, 0x44, 0x69, 0x72, 0x31, 0x2F, 0x44, 0x69, 0x72, 0x32, 0x2F, 0x46, 0x69, 0x6C, 0x65, 0x42, 0x2E, 0x74,
            0x78, 0x74, 0x0, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x11,
            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xD9, 0x7E, 0x80, 0x6, 0x6A, 0x63, 0xBC, 0xB3, 0x20,
            0x6E, 0xE6, 0xD1, 0x66, 0xB, 0x9E, 0x9E, 0x90, 0x30, 0x79, 0x35, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xE1, 0x12, 0x6F, 0x5A, 0x8, 0x0, 0x0,
            0x0, 0x8A, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xCE, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xE3, 0xD0, 0x6F,
            0x98, 0xE5, 0xEE, 0xB5, 0x70, 0x23, 0x69, 0x1, 0x72, 0x9A, 0x95, 0x49, 0xB7, 0x8C, 0xA6, 0x2, 0xCD, 0x0,
            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
        ];

        Assert.Equal(expected, actual);
    }

    [Fact]
    public void TestRandomBinaryFiles()
    {
        // Arrange
        List<InputFile> files =
        [
            new InputFile("c/wy2ntpiw.xgm.dat",
            [
                0xB4, 0x83, 0xEA, 0x84, 0x6D, 0x03, 0x35, 0x4B, 0x98, 0x9F, 0x21, 0xF0, 0xE2, 0x26, 0x95, 0xF8, 0xAA,
                0x35, 0x0A, 0xB0, 0xEC, 0x36, 0xE1, 0x18, 0x56, 0x68, 0x48, 0x18, 0x25, 0x4D, 0xC7, 0x4C, 0x9F, 0xF6,
                0x16, 0x3E, 0xAB, 0xFA, 0xA9, 0x30, 0x93, 0xD7, 0xDE, 0xCA, 0x57, 0x68, 0x46, 0x7E, 0x00, 0xE0, 0x7D,
                0xC7, 0xD6, 0x0B, 0xB9, 0x31, 0x09, 0x3F, 0x6C, 0x7D, 0x27, 0x0C, 0x3B, 0xFA, 0xDB, 0xC8, 0xEC, 0x1F,
                0x50, 0xC0, 0x85, 0x0F, 0x99, 0x0C, 0x89, 0x7E, 0x6C, 0x98, 0x19, 0x6C, 0xF9, 0xC8, 0x20, 0xEF, 0xD5,
                0x1E, 0x16, 0x73, 0x80, 0xD7, 0x2F, 0x2E, 0x89, 0x6A, 0xA1, 0x6F, 0x5E, 0xB9, 0x77, 0x18, 0x39, 0xAD,
                0x6C, 0xBC, 0x9C, 0xEF, 0x77, 0x93, 0xB7, 0x22, 0xB2, 0x0D, 0xC4, 0x43, 0xC3, 0x07, 0x57, 0x27, 0x15,
                0x68, 0xC4, 0xAF, 0x21, 0x7C, 0x39, 0xDD, 0xFE, 0x4A, 0x4C, 0x3D, 0xE5, 0x5C, 0xD8, 0x62, 0xBE, 0x0C,
                0xBF, 0x2E, 0x4C, 0x88, 0x9D, 0x58, 0xD6, 0xC1, 0x75, 0x7E, 0x26, 0xE2, 0xCF, 0x3B, 0x0B, 0xE8, 0x8E,
                0xFF, 0x7E, 0xB0, 0x19, 0x72, 0x60, 0xC7, 0x10, 0x22, 0x3E, 0x2E, 0xC6, 0x2E, 0x4A, 0xEE, 0x1B, 0x0E,
                0x04, 0x77, 0x50, 0x7F, 0x4D, 0x9B, 0x3E, 0xDE, 0xA7, 0x34, 0xDD, 0xFC, 0x99, 0xE6, 0xA7, 0x4F, 0x13,
                0x3A, 0xF6, 0xA2, 0x69, 0xA6, 0x5F, 0x92, 0x7A, 0xB4, 0x97, 0x6D, 0xFF, 0x91, 0xA1, 0xC0, 0x7A, 0x93,
                0x36, 0x21, 0x3D, 0xF9, 0x45, 0x00, 0x67, 0x2C, 0x2B, 0xAE, 0x95, 0xA5, 0x05, 0x87, 0x5D, 0xD2, 0x9A,
                0x60, 0xE1, 0x1F, 0xAF, 0x48, 0x0C, 0xCE, 0x34, 0x48, 0x2C, 0xE1, 0xE8, 0x20, 0x87, 0x2A, 0x23, 0xE8,
                0x81, 0x51, 0x16, 0x04, 0xF5, 0xFE, 0x47, 0x75, 0x6E, 0xD4, 0x44, 0x33, 0x7C, 0x0A, 0x91, 0x16, 0x02,
                0x27, 0x55, 0x4F, 0x71, 0xC2, 0x35, 0x74, 0x78, 0xBE, 0x36, 0x2B, 0x85, 0xA9, 0x67, 0x32, 0x03, 0x07,
                0x26, 0xC0, 0xCA, 0x5E, 0xF3, 0x63, 0x32
            ]),
            new InputFile("a/b/ohwhn43q.e4b.dat",
            [
                0x0E, 0x54, 0x86, 0x3E, 0xA5, 0x97, 0xAD, 0x7C, 0xA1, 0xA7, 0x0C, 0x76, 0xDA, 0x6F, 0x84, 0x71, 0x67,
                0xD3, 0x70, 0x28, 0x12, 0xE3, 0x54, 0x56, 0xA9, 0xE9, 0x2B, 0x8A, 0x8C, 0xAD, 0x9C, 0x69, 0x54, 0x1A,
                0xBD, 0x2E, 0x78, 0x5C, 0xF8, 0x8D, 0x13, 0xB6, 0xCF, 0x95, 0xFF, 0x6F, 0xEA, 0xB5, 0x5A, 0x87, 0xFE,
                0x41, 0x4F, 0xA0, 0x66, 0x73, 0x42, 0xEC, 0x53, 0x6E, 0xEB, 0x52, 0x5D, 0x81, 0xE7, 0xA6, 0x71, 0x2B,
                0x21, 0x04, 0x68, 0x00, 0xB2, 0x49, 0x73, 0xA6, 0x4C, 0x96, 0xC7, 0x08, 0xDE, 0x1B, 0xAF, 0x32, 0x3E,
                0xA4, 0xB3, 0x36, 0x3C, 0xF2, 0x1F, 0xDD, 0xE4, 0x1B, 0x98, 0xE8, 0xCA, 0x84, 0x3A, 0x4E, 0xB9, 0xD2,
                0xCF, 0xCF, 0xDD, 0x4A, 0xA8, 0x30, 0xA2, 0x0F, 0xE3
            ]),
            new InputFile("a/wto3gdsv.qcg.dat",
            [
                0xD5, 0x58, 0x71, 0xAB, 0x7D, 0x5A, 0x19, 0x86, 0xE6, 0xDA, 0xC6, 0x6C, 0x76, 0xA8, 0x81, 0xDD, 0xE4,
                0x02, 0x1E, 0x66, 0x40, 0x6A, 0x84, 0xEB, 0x1D, 0xED, 0x8C, 0x5A, 0x9A, 0x2D, 0x59, 0x3B, 0x52, 0xEA,
                0x5A, 0xFB, 0x0D, 0xB1, 0x19, 0xE0, 0xD6, 0x6F, 0xC4, 0xAA, 0x52, 0x06, 0x43, 0x44, 0x33, 0x54, 0x92,
                0x88, 0xD1, 0x9E, 0x02, 0xD2, 0x3A, 0xD7, 0xED, 0x5B, 0x56, 0x02, 0x17, 0x1F, 0x3B, 0x96, 0xC5, 0x77,
                0x29, 0xED, 0x85, 0x6B, 0xC7, 0xF3, 0x6B, 0xDF, 0x49, 0xDD, 0xE9, 0x72, 0x18, 0x73, 0x92, 0xB0, 0x52,
                0x98, 0x81, 0x45, 0x30, 0x65, 0x5C, 0x3A, 0x44, 0xDF, 0xDF, 0x82, 0x73, 0xA4, 0xFD, 0x83, 0xED, 0xD4,
                0x59, 0x93, 0x2A, 0xF6, 0x4B, 0xA5, 0x5A, 0xE3, 0xAF, 0x2A, 0xFA, 0x27
            ]),
            new InputFile("x/zcepfqep.oxq.dat",
            [
                0x02, 0xF7, 0x32, 0xF1, 0xBA, 0x83, 0x78, 0xE1, 0xE1, 0xA7, 0x44, 0x1F, 0x4C, 0xDA, 0xCD, 0xE8, 0x5F,
                0xDA, 0x77, 0xE4, 0x63, 0x23, 0x1B, 0xFB, 0xA6, 0x2E, 0x85, 0xF1, 0x9E, 0xD4, 0xF4, 0xD3, 0x33, 0xD1,
                0x24, 0x69, 0x0D, 0x1A, 0xC1, 0xA8, 0xBD, 0xBC, 0xED, 0xA7, 0x5D, 0xE3, 0x61, 0xCC, 0xD6, 0x98, 0xDC,
                0xCB, 0x1B, 0x98, 0x6C, 0xD4, 0x66, 0x85, 0x04, 0xF0, 0x4A, 0x1F, 0xED, 0xC8, 0xBC, 0x3A, 0x42, 0x7E,
                0xF5, 0x7B, 0x8D, 0x41, 0xC6, 0xA5, 0x94, 0x4C, 0x2C, 0x2F, 0x81, 0xF8, 0x83, 0x4C, 0xE0, 0xC5, 0x9F,
                0x67, 0x78, 0x8E, 0x78, 0x23, 0xFC, 0xE7, 0x3D, 0xDF, 0xD9, 0x27, 0x55, 0x46, 0xAE, 0xC4, 0x59, 0x2C,
                0x40, 0x1F, 0xCB, 0x0B, 0x9D, 0xFE, 0x8D, 0xDF, 0x14, 0xE2, 0x11, 0xAF, 0xA3, 0xC2, 0x99, 0xF8, 0x80,
                0x89, 0x5C, 0x79, 0x8A, 0x1F, 0x7F, 0x0D, 0xF3, 0x7C, 0xE1, 0x8A, 0x72, 0x54, 0x03, 0xED, 0x31, 0xA9,
                0xBA, 0xAE, 0x10, 0x79, 0x95, 0x80, 0xC9, 0x58, 0x07, 0xC3, 0x21, 0x55, 0xD2, 0x55, 0xA3, 0x76, 0x7A,
                0x7E, 0xCB, 0xA3, 0x25, 0x1A, 0xBB, 0x1C, 0xA1, 0x4E, 0xBE, 0xB1, 0x9D, 0x5A, 0x4E, 0x7C, 0xA3, 0xE2,
                0xA9, 0x62, 0xA2, 0x8D, 0xD5, 0xC8, 0x3D, 0xA7, 0x24, 0xF6, 0x12, 0x80, 0xD1, 0x9C, 0x5B, 0x79, 0x7F,
                0xF2, 0x13, 0xA5, 0x02, 0x45, 0x00, 0x8A, 0xC2, 0x5A, 0x91, 0xEE, 0xAE, 0xDC, 0x80, 0xDA, 0x0F, 0x5F,
                0x7A, 0x48, 0xFA, 0x31, 0x7B, 0x3F, 0x08, 0x9D, 0x6E, 0xAD, 0xE0, 0xE1, 0x4C, 0xF5, 0xE6, 0xA9, 0x50,
                0x66, 0x8E, 0xB3, 0xDD, 0x13, 0x66, 0x69, 0x40, 0xB0, 0xB0, 0x31, 0x11, 0x06, 0x2D, 0xEC, 0x8C, 0x19,
                0xBC, 0xE8, 0xFC, 0xE9, 0xB3, 0x80, 0xD8, 0x5E, 0xFA, 0x10, 0xD2, 0xEA, 0x7C, 0xDC, 0x0C, 0xB4, 0xDF,
                0x34, 0x02, 0x46, 0x64, 0xE7, 0xA7, 0x72, 0x92, 0x12, 0x01, 0x31, 0xDF, 0xB1, 0xE2, 0x0C, 0x12, 0x85,
                0x99, 0x1B, 0xD1, 0x27, 0x0C, 0x69, 0x64, 0xEF, 0x81, 0xDF, 0xEA, 0xCB, 0xB3, 0xB8, 0xD1, 0x10, 0xB0,
                0x2B, 0x40, 0xB5, 0xBD, 0xF9, 0x4B, 0xCD, 0x7E, 0x70, 0x15, 0x50, 0x3B, 0x9A, 0x1A, 0x0C, 0x78, 0xBA,
                0x85, 0x7B, 0xA6, 0x4F, 0xC0, 0x56, 0xFE, 0xB2, 0x24, 0xD6, 0xC6, 0x17, 0x17, 0xD6, 0x15, 0xF3, 0x04,
                0x83, 0x4B, 0x28, 0x9E, 0xDB, 0x1E, 0x79, 0x80, 0x8B, 0x4F, 0x8A, 0x71, 0xE6, 0x35, 0x6A, 0x65, 0x6C,
                0x33, 0x16, 0x80, 0x15, 0x1C, 0x01, 0x8E, 0xD7, 0xC3, 0xB7, 0x08, 0xDE, 0x6D, 0xFA, 0x23, 0x4E, 0x68,
                0xD8, 0xE5, 0xF5, 0x7D, 0xD3, 0x62, 0xF1, 0x3B, 0x7D, 0x32, 0x12, 0x4A, 0xD7, 0xFA, 0xB2, 0x79, 0xED,
                0x45, 0xAB, 0xBC, 0x94, 0x95, 0xE0, 0xE1, 0x12, 0x25, 0x74, 0x5D, 0xD4, 0x45, 0xA0, 0x75, 0x36, 0xDE,
                0xBA, 0x26, 0x06, 0xF4, 0x69, 0xE2, 0x07, 0xD8, 0x49, 0x02, 0xD6, 0x82, 0x54, 0x3B
            ]),
            new InputFile("x/y/z/zyarask5.w1l.dat",
            [
                0xBE, 0x95, 0xD1, 0x2B, 0xFC, 0x33, 0x72, 0xD2, 0xE1, 0xA1, 0xD1, 0x9C, 0x87, 0x34, 0x42, 0x4B, 0x19,
                0xF0, 0xC2, 0x0E, 0xB7, 0xAC, 0x00, 0xAE, 0x4C, 0x33, 0xA6, 0xA1, 0x2E, 0x0E, 0xDA, 0x27, 0x5B, 0x2E,
                0x9B, 0x49, 0x3E, 0x5C, 0xF7, 0x0E, 0xED, 0x97, 0xDD, 0xA4, 0xB4, 0xB4, 0x28, 0x34, 0xE3, 0x03, 0x80,
                0x55, 0x02, 0x97, 0xB6, 0x77, 0x2D, 0xEF, 0x56, 0xE2, 0x74, 0xEF, 0xBE, 0x01, 0xDA, 0x19, 0x36, 0x9C,
                0xAC, 0x39, 0xC5, 0x20, 0xD2, 0xE3, 0x97, 0x7E, 0xD9, 0x77, 0x66, 0x35, 0x4B, 0xC8, 0x6D, 0x0C, 0x7D,
                0x1C, 0xB1, 0x8A, 0x50, 0x3C, 0xF1, 0x8E, 0x76, 0x54, 0x37, 0x94, 0xDF, 0xE6, 0xB9, 0x7D, 0x0B, 0xAE,
                0xBA, 0x53, 0xCB, 0x0C, 0x6B, 0x30, 0xF7, 0x0E, 0xF2, 0x36, 0x5C, 0x6C, 0x28, 0x88, 0x6E, 0xC8, 0x1A,
                0x60, 0xEB, 0x81, 0xBD, 0xD0, 0x12, 0x23, 0xBD, 0x03, 0xF6, 0x2C, 0xF6, 0x76, 0xB7, 0x52, 0x41, 0x90,
                0xB8, 0xE2, 0x4D, 0x06, 0x2F, 0x32, 0xC9, 0x9D, 0x1E, 0xC3, 0xEB, 0x8E, 0xC5, 0x2C, 0x22, 0xBD, 0x81,
                0xFB, 0x6C, 0x07, 0xE8, 0xE5, 0x0C, 0x6C, 0x14, 0x28, 0xFB, 0xA7, 0x3D, 0xD3, 0x66, 0x1A, 0xBA, 0x9C,
                0xE4, 0x81, 0xBC, 0x49, 0xC8, 0x46, 0x29, 0x4D, 0x93, 0x45, 0x5E, 0xEA, 0x03, 0xFB, 0xFC, 0x9C, 0xAC,
                0xEB, 0xC0, 0xC9, 0x35, 0x26, 0xC0, 0xEF, 0x11, 0x1C, 0x09, 0xD1, 0xC6, 0x04, 0x7A, 0x58, 0x11, 0x7B,
                0xB5, 0x4C, 0xFC, 0xA4, 0xA7, 0xCF, 0x3E, 0x4A, 0x02, 0xCA, 0x8D, 0x5B, 0x3D, 0xF9, 0x0F, 0x61, 0xE7,
                0x54, 0x66, 0x63, 0xF8, 0xA5, 0xE3, 0x25, 0x50, 0xD6, 0x6B, 0x73, 0x1B, 0xAD, 0xB7, 0x4D, 0xC5, 0x45,
                0x15, 0xEE, 0x3B, 0x65, 0x95, 0xD9, 0x57, 0x4C, 0x53, 0x42, 0xD7, 0xF6, 0xEC, 0x0B, 0x59, 0x14, 0xB9,
                0xEA, 0xE4, 0x71, 0xA5, 0x68, 0xF3, 0xA3, 0xBD, 0x15, 0x0C, 0xB2, 0x05, 0x2B, 0xF5, 0xED, 0xC8, 0x41,
                0x3A, 0x4F, 0x44, 0xEE, 0x07, 0x99, 0x9D, 0xDA, 0x64, 0x6D, 0x54, 0x4A, 0x58, 0x7E, 0x94, 0xF1, 0x21,
                0x5E, 0x8A, 0x67, 0x2E, 0x05, 0x82, 0x8B, 0xF7, 0xAE, 0xE2, 0x40, 0xAA, 0x75, 0x7C, 0x46, 0x41, 0xDF,
                0x6B, 0x4A, 0x69, 0x3B, 0x32, 0x46, 0x47, 0xB1, 0x3C, 0xF3, 0xBB, 0xD0, 0xA0, 0xF4, 0x53, 0x7B, 0x7D,
                0x22, 0xB5, 0x03, 0x8E, 0xCF, 0x98, 0x84, 0xF2, 0x55, 0xBC, 0x96, 0xE9, 0x5A, 0x7E, 0xD1, 0x5D, 0x3E,
                0x1D, 0x4C, 0xF1, 0x57, 0x9A, 0x9B, 0xA1, 0x1B, 0xD9, 0xA6, 0xBF, 0xF0, 0xDB, 0x81, 0x0E, 0x15, 0xC5,
                0xCF, 0xB4, 0x43, 0x78, 0x5A, 0x54, 0x0F, 0xFA, 0xEE, 0x19, 0xFC, 0xB6, 0x9D, 0xCB, 0x6B, 0x94, 0xCF,
                0x3E, 0x2C, 0x76, 0x3A, 0x05, 0x7D, 0x67, 0x41, 0xE1, 0xC1, 0x34, 0x0A
            ]),
        ];

        // Act
        var actual = MicroPak.PackFiles(files);

        // Assert
        byte[] expected = // Reference output produced with `repak pack` (using default options)
        [
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6F, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2A, 0x2F, 0x8F, 0x27, 0x20, 0xBF, 0xF0, 0x9A,
            0x66, 0xFC, 0x89, 0x03, 0xB2, 0xD9, 0xBE, 0xE6, 0x71, 0xF4, 0xF3, 0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E,
            0x54, 0x86, 0x3E, 0xA5, 0x97, 0xAD, 0x7C, 0xA1, 0xA7, 0x0C, 0x76, 0xDA, 0x6F, 0x84, 0x71, 0x67, 0xD3, 0x70,
            0x28, 0x12, 0xE3, 0x54, 0x56, 0xA9, 0xE9, 0x2B, 0x8A, 0x8C, 0xAD, 0x9C, 0x69, 0x54, 0x1A, 0xBD, 0x2E, 0x78,
            0x5C, 0xF8, 0x8D, 0x13, 0xB6, 0xCF, 0x95, 0xFF, 0x6F, 0xEA, 0xB5, 0x5A, 0x87, 0xFE, 0x41, 0x4F, 0xA0, 0x66,
            0x73, 0x42, 0xEC, 0x53, 0x6E, 0xEB, 0x52, 0x5D, 0x81, 0xE7, 0xA6, 0x71, 0x2B, 0x21, 0x04, 0x68, 0x00, 0xB2,
            0x49, 0x73, 0xA6, 0x4C, 0x96, 0xC7, 0x08, 0xDE, 0x1B, 0xAF, 0x32, 0x3E, 0xA4, 0xB3, 0x36, 0x3C, 0xF2, 0x1F,
            0xDD, 0xE4, 0x1B, 0x98, 0xE8, 0xCA, 0x84, 0x3A, 0x4E, 0xB9, 0xD2, 0xCF, 0xCF, 0xDD, 0x4A, 0xA8, 0x30, 0xA2,
            0x0F, 0xE3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x72, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x83, 0xA8, 0x69, 0xE0, 0x86,
            0x97, 0x44, 0x97, 0xFA, 0x1F, 0x81, 0x4F, 0x74, 0x29, 0x8B, 0x0D, 0x17, 0xF2, 0x4C, 0x00, 0x00, 0x00, 0x00,
            0x00, 0xD5, 0x58, 0x71, 0xAB, 0x7D, 0x5A, 0x19, 0x86, 0xE6, 0xDA, 0xC6, 0x6C, 0x76, 0xA8, 0x81, 0xDD, 0xE4,
            0x02, 0x1E, 0x66, 0x40, 0x6A, 0x84, 0xEB, 0x1D, 0xED, 0x8C, 0x5A, 0x9A, 0x2D, 0x59, 0x3B, 0x52, 0xEA, 0x5A,
            0xFB, 0x0D, 0xB1, 0x19, 0xE0, 0xD6, 0x6F, 0xC4, 0xAA, 0x52, 0x06, 0x43, 0x44, 0x33, 0x54, 0x92, 0x88, 0xD1,
            0x9E, 0x02, 0xD2, 0x3A, 0xD7, 0xED, 0x5B, 0x56, 0x02, 0x17, 0x1F, 0x3B, 0x96, 0xC5, 0x77, 0x29, 0xED, 0x85,
            0x6B, 0xC7, 0xF3, 0x6B, 0xDF, 0x49, 0xDD, 0xE9, 0x72, 0x18, 0x73, 0x92, 0xB0, 0x52, 0x98, 0x81, 0x45, 0x30,
            0x65, 0x5C, 0x3A, 0x44, 0xDF, 0xDF, 0x82, 0x73, 0xA4, 0xFD, 0x83, 0xED, 0xD4, 0x59, 0x93, 0x2A, 0xF6, 0x4B,
            0xA5, 0x5A, 0xE3, 0xAF, 0x2A, 0xFA, 0x27, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x01, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8B,
            0xBA, 0x9A, 0xD3, 0x0F, 0xCC, 0xE7, 0xA2, 0x1A, 0x3D, 0xE9, 0x84, 0xBE, 0x74, 0x64, 0x9A, 0xBB, 0xE5, 0xF0,
            0x9B, 0x00, 0x00, 0x00, 0x00, 0x00, 0xB4, 0x83, 0xEA, 0x84, 0x6D, 0x03, 0x35, 0x4B, 0x98, 0x9F, 0x21, 0xF0,
            0xE2, 0x26, 0x95, 0xF8, 0xAA, 0x35, 0x0A, 0xB0, 0xEC, 0x36, 0xE1, 0x18, 0x56, 0x68, 0x48, 0x18, 0x25, 0x4D,
            0xC7, 0x4C, 0x9F, 0xF6, 0x16, 0x3E, 0xAB, 0xFA, 0xA9, 0x30, 0x93, 0xD7, 0xDE, 0xCA, 0x57, 0x68, 0x46, 0x7E,
            0x00, 0xE0, 0x7D, 0xC7, 0xD6, 0x0B, 0xB9, 0x31, 0x09, 0x3F, 0x6C, 0x7D, 0x27, 0x0C, 0x3B, 0xFA, 0xDB, 0xC8,
            0xEC, 0x1F, 0x50, 0xC0, 0x85, 0x0F, 0x99, 0x0C, 0x89, 0x7E, 0x6C, 0x98, 0x19, 0x6C, 0xF9, 0xC8, 0x20, 0xEF,
            0xD5, 0x1E, 0x16, 0x73, 0x80, 0xD7, 0x2F, 0x2E, 0x89, 0x6A, 0xA1, 0x6F, 0x5E, 0xB9, 0x77, 0x18, 0x39, 0xAD,
            0x6C, 0xBC, 0x9C, 0xEF, 0x77, 0x93, 0xB7, 0x22, 0xB2, 0x0D, 0xC4, 0x43, 0xC3, 0x07, 0x57, 0x27, 0x15, 0x68,
            0xC4, 0xAF, 0x21, 0x7C, 0x39, 0xDD, 0xFE, 0x4A, 0x4C, 0x3D, 0xE5, 0x5C, 0xD8, 0x62, 0xBE, 0x0C, 0xBF, 0x2E,
            0x4C, 0x88, 0x9D, 0x58, 0xD6, 0xC1, 0x75, 0x7E, 0x26, 0xE2, 0xCF, 0x3B, 0x0B, 0xE8, 0x8E, 0xFF, 0x7E, 0xB0,
            0x19, 0x72, 0x60, 0xC7, 0x10, 0x22, 0x3E, 0x2E, 0xC6, 0x2E, 0x4A, 0xEE, 0x1B, 0x0E, 0x04, 0x77, 0x50, 0x7F,
            0x4D, 0x9B, 0x3E, 0xDE, 0xA7, 0x34, 0xDD, 0xFC, 0x99, 0xE6, 0xA7, 0x4F, 0x13, 0x3A, 0xF6, 0xA2, 0x69, 0xA6,
            0x5F, 0x92, 0x7A, 0xB4, 0x97, 0x6D, 0xFF, 0x91, 0xA1, 0xC0, 0x7A, 0x93, 0x36, 0x21, 0x3D, 0xF9, 0x45, 0x00,
            0x67, 0x2C, 0x2B, 0xAE, 0x95, 0xA5, 0x05, 0x87, 0x5D, 0xD2, 0x9A, 0x60, 0xE1, 0x1F, 0xAF, 0x48, 0x0C, 0xCE,
            0x34, 0x48, 0x2C, 0xE1, 0xE8, 0x20, 0x87, 0x2A, 0x23, 0xE8, 0x81, 0x51, 0x16, 0x04, 0xF5, 0xFE, 0x47, 0x75,
            0x6E, 0xD4, 0x44, 0x33, 0x7C, 0x0A, 0x91, 0x16, 0x02, 0x27, 0x55, 0x4F, 0x71, 0xC2, 0x35, 0x74, 0x78, 0xBE,
            0x36, 0x2B, 0x85, 0xA9, 0x67, 0x32, 0x03, 0x07, 0x26, 0xC0, 0xCA, 0x5E, 0xF3, 0x63, 0x32, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x82, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x82, 0x01, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA9, 0x87, 0x55, 0x12, 0x7A, 0x12, 0x79, 0x76, 0x6D, 0xF3, 0xA9,
            0x68, 0x82, 0xE7, 0x73, 0xBE, 0x69, 0xA1, 0x8F, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBE, 0x95, 0xD1, 0x2B,
            0xFC, 0x33, 0x72, 0xD2, 0xE1, 0xA1, 0xD1, 0x9C, 0x87, 0x34, 0x42, 0x4B, 0x19, 0xF0, 0xC2, 0x0E, 0xB7, 0xAC,
            0x00, 0xAE, 0x4C, 0x33, 0xA6, 0xA1, 0x2E, 0x0E, 0xDA, 0x27, 0x5B, 0x2E, 0x9B, 0x49, 0x3E, 0x5C, 0xF7, 0x0E,
            0xED, 0x97, 0xDD, 0xA4, 0xB4, 0xB4, 0x28, 0x34, 0xE3, 0x03, 0x80, 0x55, 0x02, 0x97, 0xB6, 0x77, 0x2D, 0xEF,
            0x56, 0xE2, 0x74, 0xEF, 0xBE, 0x01, 0xDA, 0x19, 0x36, 0x9C, 0xAC, 0x39, 0xC5, 0x20, 0xD2, 0xE3, 0x97, 0x7E,
            0xD9, 0x77, 0x66, 0x35, 0x4B, 0xC8, 0x6D, 0x0C, 0x7D, 0x1C, 0xB1, 0x8A, 0x50, 0x3C, 0xF1, 0x8E, 0x76, 0x54,
            0x37, 0x94, 0xDF, 0xE6, 0xB9, 0x7D, 0x0B, 0xAE, 0xBA, 0x53, 0xCB, 0x0C, 0x6B, 0x30, 0xF7, 0x0E, 0xF2, 0x36,
            0x5C, 0x6C, 0x28, 0x88, 0x6E, 0xC8, 0x1A, 0x60, 0xEB, 0x81, 0xBD, 0xD0, 0x12, 0x23, 0xBD, 0x03, 0xF6, 0x2C,
            0xF6, 0x76, 0xB7, 0x52, 0x41, 0x90, 0xB8, 0xE2, 0x4D, 0x06, 0x2F, 0x32, 0xC9, 0x9D, 0x1E, 0xC3, 0xEB, 0x8E,
            0xC5, 0x2C, 0x22, 0xBD, 0x81, 0xFB, 0x6C, 0x07, 0xE8, 0xE5, 0x0C, 0x6C, 0x14, 0x28, 0xFB, 0xA7, 0x3D, 0xD3,
            0x66, 0x1A, 0xBA, 0x9C, 0xE4, 0x81, 0xBC, 0x49, 0xC8, 0x46, 0x29, 0x4D, 0x93, 0x45, 0x5E, 0xEA, 0x03, 0xFB,
            0xFC, 0x9C, 0xAC, 0xEB, 0xC0, 0xC9, 0x35, 0x26, 0xC0, 0xEF, 0x11, 0x1C, 0x09, 0xD1, 0xC6, 0x04, 0x7A, 0x58,
            0x11, 0x7B, 0xB5, 0x4C, 0xFC, 0xA4, 0xA7, 0xCF, 0x3E, 0x4A, 0x02, 0xCA, 0x8D, 0x5B, 0x3D, 0xF9, 0x0F, 0x61,
            0xE7, 0x54, 0x66, 0x63, 0xF8, 0xA5, 0xE3, 0x25, 0x50, 0xD6, 0x6B, 0x73, 0x1B, 0xAD, 0xB7, 0x4D, 0xC5, 0x45,
            0x15, 0xEE, 0x3B, 0x65, 0x95, 0xD9, 0x57, 0x4C, 0x53, 0x42, 0xD7, 0xF6, 0xEC, 0x0B, 0x59, 0x14, 0xB9, 0xEA,
            0xE4, 0x71, 0xA5, 0x68, 0xF3, 0xA3, 0xBD, 0x15, 0x0C, 0xB2, 0x05, 0x2B, 0xF5, 0xED, 0xC8, 0x41, 0x3A, 0x4F,
            0x44, 0xEE, 0x07, 0x99, 0x9D, 0xDA, 0x64, 0x6D, 0x54, 0x4A, 0x58, 0x7E, 0x94, 0xF1, 0x21, 0x5E, 0x8A, 0x67,
            0x2E, 0x05, 0x82, 0x8B, 0xF7, 0xAE, 0xE2, 0x40, 0xAA, 0x75, 0x7C, 0x46, 0x41, 0xDF, 0x6B, 0x4A, 0x69, 0x3B,
            0x32, 0x46, 0x47, 0xB1, 0x3C, 0xF3, 0xBB, 0xD0, 0xA0, 0xF4, 0x53, 0x7B, 0x7D, 0x22, 0xB5, 0x03, 0x8E, 0xCF,
            0x98, 0x84, 0xF2, 0x55, 0xBC, 0x96, 0xE9, 0x5A, 0x7E, 0xD1, 0x5D, 0x3E, 0x1D, 0x4C, 0xF1, 0x57, 0x9A, 0x9B,
            0xA1, 0x1B, 0xD9, 0xA6, 0xBF, 0xF0, 0xDB, 0x81, 0x0E, 0x15, 0xC5, 0xCF, 0xB4, 0x43, 0x78, 0x5A, 0x54, 0x0F,
            0xFA, 0xEE, 0x19, 0xFC, 0xB6, 0x9D, 0xCB, 0x6B, 0x94, 0xCF, 0x3E, 0x2C, 0x76, 0x3A, 0x05, 0x7D, 0x67, 0x41,
            0xE1, 0xC1, 0x34, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x95, 0x01, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x95, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x39, 0x6C, 0x10,
            0xC4, 0x0E, 0xF7, 0x7A, 0x75, 0x9B, 0x70, 0xBE, 0xBD, 0x72, 0xEE, 0xBB, 0x9A, 0x8D, 0x54, 0xA3, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x02, 0xF7, 0x32, 0xF1, 0xBA, 0x83, 0x78, 0xE1, 0xE1, 0xA7, 0x44, 0x1F, 0x4C, 0xDA, 0xCD,
            0xE8, 0x5F, 0xDA, 0x77, 0xE4, 0x63, 0x23, 0x1B, 0xFB, 0xA6, 0x2E, 0x85, 0xF1, 0x9E, 0xD4, 0xF4, 0xD3, 0x33,
            0xD1, 0x24, 0x69, 0x0D, 0x1A, 0xC1, 0xA8, 0xBD, 0xBC, 0xED, 0xA7, 0x5D, 0xE3, 0x61, 0xCC, 0xD6, 0x98, 0xDC,
            0xCB, 0x1B, 0x98, 0x6C, 0xD4, 0x66, 0x85, 0x04, 0xF0, 0x4A, 0x1F, 0xED, 0xC8, 0xBC, 0x3A, 0x42, 0x7E, 0xF5,
            0x7B, 0x8D, 0x41, 0xC6, 0xA5, 0x94, 0x4C, 0x2C, 0x2F, 0x81, 0xF8, 0x83, 0x4C, 0xE0, 0xC5, 0x9F, 0x67, 0x78,
            0x8E, 0x78, 0x23, 0xFC, 0xE7, 0x3D, 0xDF, 0xD9, 0x27, 0x55, 0x46, 0xAE, 0xC4, 0x59, 0x2C, 0x40, 0x1F, 0xCB,
            0x0B, 0x9D, 0xFE, 0x8D, 0xDF, 0x14, 0xE2, 0x11, 0xAF, 0xA3, 0xC2, 0x99, 0xF8, 0x80, 0x89, 0x5C, 0x79, 0x8A,
            0x1F, 0x7F, 0x0D, 0xF3, 0x7C, 0xE1, 0x8A, 0x72, 0x54, 0x03, 0xED, 0x31, 0xA9, 0xBA, 0xAE, 0x10, 0x79, 0x95,
            0x80, 0xC9, 0x58, 0x07, 0xC3, 0x21, 0x55, 0xD2, 0x55, 0xA3, 0x76, 0x7A, 0x7E, 0xCB, 0xA3, 0x25, 0x1A, 0xBB,
            0x1C, 0xA1, 0x4E, 0xBE, 0xB1, 0x9D, 0x5A, 0x4E, 0x7C, 0xA3, 0xE2, 0xA9, 0x62, 0xA2, 0x8D, 0xD5, 0xC8, 0x3D,
            0xA7, 0x24, 0xF6, 0x12, 0x80, 0xD1, 0x9C, 0x5B, 0x79, 0x7F, 0xF2, 0x13, 0xA5, 0x02, 0x45, 0x00, 0x8A, 0xC2,
            0x5A, 0x91, 0xEE, 0xAE, 0xDC, 0x80, 0xDA, 0x0F, 0x5F, 0x7A, 0x48, 0xFA, 0x31, 0x7B, 0x3F, 0x08, 0x9D, 0x6E,
            0xAD, 0xE0, 0xE1, 0x4C, 0xF5, 0xE6, 0xA9, 0x50, 0x66, 0x8E, 0xB3, 0xDD, 0x13, 0x66, 0x69, 0x40, 0xB0, 0xB0,
            0x31, 0x11, 0x06, 0x2D, 0xEC, 0x8C, 0x19, 0xBC, 0xE8, 0xFC, 0xE9, 0xB3, 0x80, 0xD8, 0x5E, 0xFA, 0x10, 0xD2,
            0xEA, 0x7C, 0xDC, 0x0C, 0xB4, 0xDF, 0x34, 0x02, 0x46, 0x64, 0xE7, 0xA7, 0x72, 0x92, 0x12, 0x01, 0x31, 0xDF,
            0xB1, 0xE2, 0x0C, 0x12, 0x85, 0x99, 0x1B, 0xD1, 0x27, 0x0C, 0x69, 0x64, 0xEF, 0x81, 0xDF, 0xEA, 0xCB, 0xB3,
            0xB8, 0xD1, 0x10, 0xB0, 0x2B, 0x40, 0xB5, 0xBD, 0xF9, 0x4B, 0xCD, 0x7E, 0x70, 0x15, 0x50, 0x3B, 0x9A, 0x1A,
            0x0C, 0x78, 0xBA, 0x85, 0x7B, 0xA6, 0x4F, 0xC0, 0x56, 0xFE, 0xB2, 0x24, 0xD6, 0xC6, 0x17, 0x17, 0xD6, 0x15,
            0xF3, 0x04, 0x83, 0x4B, 0x28, 0x9E, 0xDB, 0x1E, 0x79, 0x80, 0x8B, 0x4F, 0x8A, 0x71, 0xE6, 0x35, 0x6A, 0x65,
            0x6C, 0x33, 0x16, 0x80, 0x15, 0x1C, 0x01, 0x8E, 0xD7, 0xC3, 0xB7, 0x08, 0xDE, 0x6D, 0xFA, 0x23, 0x4E, 0x68,
            0xD8, 0xE5, 0xF5, 0x7D, 0xD3, 0x62, 0xF1, 0x3B, 0x7D, 0x32, 0x12, 0x4A, 0xD7, 0xFA, 0xB2, 0x79, 0xED, 0x45,
            0xAB, 0xBC, 0x94, 0x95, 0xE0, 0xE1, 0x12, 0x25, 0x74, 0x5D, 0xD4, 0x45, 0xA0, 0x75, 0x36, 0xDE, 0xBA, 0x26,
            0x06, 0xF4, 0x69, 0xE2, 0x07, 0xD8, 0x49, 0x02, 0xD6, 0x82, 0x54, 0x3B, 0x0A, 0x00, 0x00, 0x00, 0x2E, 0x2E,
            0x2F, 0x2E, 0x2E, 0x2F, 0x2E, 0x2E, 0x2F, 0x00, 0x05, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x61, 0x2F,
            0x62, 0x2F, 0x6F, 0x68, 0x77, 0x68, 0x6E, 0x34, 0x33, 0x71, 0x2E, 0x65, 0x34, 0x62, 0x2E, 0x64, 0x61, 0x74,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6F,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2A, 0x2F, 0x8F, 0x27, 0x20, 0xBF, 0xF0,
            0x9A, 0x66, 0xFC, 0x89, 0x03, 0xB2, 0xD9, 0xBE, 0xE6, 0x71, 0xF4, 0xF3, 0x74, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x13, 0x00, 0x00, 0x00, 0x61, 0x2F, 0x77, 0x74, 0x6F, 0x33, 0x67, 0x64, 0x73, 0x76, 0x2E, 0x71, 0x63, 0x67,
            0x2E, 0x64, 0x61, 0x74, 0x00, 0xA4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x72, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x83, 0xA8,
            0x69, 0xE0, 0x86, 0x97, 0x44, 0x97, 0xFA, 0x1F, 0x81, 0x4F, 0x74, 0x29, 0x8B, 0x0D, 0x17, 0xF2, 0x4C, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x63, 0x2F, 0x77, 0x79, 0x32, 0x6E, 0x74, 0x70, 0x69, 0x77,
            0x2E, 0x78, 0x67, 0x6D, 0x2E, 0x64, 0x61, 0x74, 0x00, 0x4B, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17,
            0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x8B, 0xBA, 0x9A, 0xD3, 0x0F, 0xCC, 0xE7, 0xA2, 0x1A, 0x3D, 0xE9, 0x84, 0xBE, 0x74, 0x64, 0x9A, 0xBB,
            0xE5, 0xF0, 0x9B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x78, 0x2F, 0x79, 0x2F, 0x7A, 0x2F,
            0x7A, 0x79, 0x61, 0x72, 0x61, 0x73, 0x6B, 0x35, 0x2E, 0x77, 0x31, 0x6C, 0x2E, 0x64, 0x61, 0x74, 0x00, 0x97,
            0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x82, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x82, 0x01, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA9, 0x87, 0x55, 0x12, 0x7A, 0x12, 0x79, 0x76, 0x6D,
            0xF3, 0xA9, 0x68, 0x82, 0xE7, 0x73, 0xBE, 0x69, 0xA1, 0x8F, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x00,
            0x00, 0x00, 0x78, 0x2F, 0x7A, 0x63, 0x65, 0x70, 0x66, 0x71, 0x65, 0x70, 0x2E, 0x6F, 0x78, 0x71, 0x2E, 0x64,
            0x61, 0x74, 0x00, 0x4E, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x95, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x95, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x39, 0x6C, 0x10, 0xC4,
            0x0E, 0xF7, 0x7A, 0x75, 0x9B, 0x70, 0xBE, 0xBD, 0x72, 0xEE, 0xBB, 0x9A, 0x8D, 0x54, 0xA3, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0xE1, 0x12, 0x6F, 0x5A, 0x08, 0x00, 0x00, 0x00, 0x18, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x94,
            0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9F, 0xD8, 0x90, 0x41, 0x61, 0xE0, 0x66, 0x21, 0x97, 0x4F, 0x68,
            0xBE, 0x45, 0x4D, 0x16, 0x3C, 0xDB, 0x27, 0x06, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
        ];

        Assert.Equal(expected, actual);
    }
}